(i) Taula agrupant els resultats segons la mida de la cc.

	call gds.graph.project.cypher('graf_num_families',
	'MATCH (p:Individu) RETURN id(p) AS id',
	'MATCH (p1:Individu)-[f:FAMILIA{relacio_harmonitzada:"jefe"}]-(p1)-[:FAMILIA]-(p2:Individu) RETURN id(p1) AS source, id(p2) AS target, "familiars" as type, count(*) AS weight')

	CALL gds.wcc.stream('graf_num_families')
	YIELD componentId, nodeId
	RETURN componentId, size(collect(nodeId)) AS mida, collect(nodeId) AS nodes
	ORDER BY mida DESC LIMIT 3


(ii) Connexions entre nodes amb el graf de l'anterior consulta

	CALL gds.wcc.stream('graf_num_families')
	YIELD nodeId, componentId
	WITH componentId, collect(nodeId) AS nodes, size(collect(nodeId)) AS mida
	ORDER BY mida DESC
	LIMIT 3
	MATCH (n)--(h:Habitatge)
	WHERE id(n) IN nodes
	RETURN n,h
	
	
(iii)  Número de relacions (Individu)--(Habitatge) per cada municipi i any de padró.

	call gds.graph.project.cypher('graf_num_relacions',
	'MATCH (p) RETURN id(p) AS id',
	'MATCH (p1:Individu)--(h:Habitatge) RETURN h.Id_Llar AS source, id(p1) AS target, "relacio" as type, count(*) AS weight')

	CALL gds.wcc.stream('graf_num_relacions')
	YIELD componentId, nodeId
	WITH componentId, size(collect(nodeId)) AS mida, collect(nodeId) AS nodes
	MATCH (n)
	WHERE id(n) IN nodes
	RETURN n.Municipi AS municipi, n.Any_Padro AS any_padro, COUNT(*) AS num_relacions 
	ORDER BY any_padro
	
	
(iv) Anàlisi dels caps de familia

	call gds.graph.project.cypher('graf_cap3',
		'MATCH (p:Individu) RETURN id(p) AS id',
		'MATCH (p:Individu)-[f:FAMILIA{relacio_harmonitzada:"jefe"}]-(p)-[:VIU]-(h:Habitatge) RETURN id(p) AS source,h.Id_Llar AS target, "cap" as type, count(*) AS weight')

	CALL gds.wcc.stream('graf_cap3')
	YIELD componentId, nodeId
	WITH componentId, collect(nodeId) AS nodes, size(collect(nodeId)) AS mida
	MATCH (n:Individu) WHERE id(n) IN nodes
	RETURN size(collect(n.name)) AS num_caps, collect(DISTINCT(n.name)) AS caps, n.Year AS any
	ORDER BY any
